//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CDatos
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    using CEntidades;

    public partial class VentasCredimaxEntities : DbContext
    {
        public VentasCredimaxEntities()
            : base("name=VentasCredimaxEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Cliente> Cliente { get; set; }
        public virtual DbSet<FormaDePago> FormaDePago { get; set; }
        public virtual DbSet<Pago> Pago { get; set; }
        public virtual DbSet<Venta> Venta { get; set; }
        public virtual DbSet<Cuota> Cuota { get; set; }
        public virtual DbSet<ReciboControl> ReciboControl { get; set; }
    
        public virtual ObjectResult<sp_GetVentasByClientId_Result> sp_GetVentasByClientId(Nullable<int> clientId)
        {
            var clientIdParameter = clientId.HasValue ?
                new ObjectParameter("ClientId", clientId) :
                new ObjectParameter("ClientId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_GetVentasByClientId_Result>("sp_GetVentasByClientId", clientIdParameter);
        }
    
        public virtual ObjectResult<ComprobanteDePago_Result> ComprobanteDePago(Nullable<int> ventaId)
        {
            var ventaIdParameter = ventaId.HasValue ?
                new ObjectParameter("VentaId", ventaId) :
                new ObjectParameter("VentaId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ComprobanteDePago_Result>("ComprobanteDePago", ventaIdParameter);
        }
    
        public virtual ObjectResult<ReciboDePago_Result> ReciboDePago(Nullable<int> ventaId, Nullable<int> numeroDeCuota)
        {
            var ventaIdParameter = ventaId.HasValue ?
                new ObjectParameter("VentaId", ventaId) :
                new ObjectParameter("VentaId", typeof(int));
    
            var numeroDeCuotaParameter = numeroDeCuota.HasValue ?
                new ObjectParameter("NumeroDeCuota", numeroDeCuota) :
                new ObjectParameter("NumeroDeCuota", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ReciboDePago_Result>("ReciboDePago", ventaIdParameter, numeroDeCuotaParameter);
        }
    }
}
